name: project

on:
  push:
    paths:
      - 'project/**'
      - '**.yml'

jobs:
  CodeCheck:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 1

    - name: cppcheck
      uses: Qful/check-action@master
      with:
        github_token: ${{ secrets.SOC_XIN_TOCKEN }}
        enable: all
        inconclusive: disable
        inline_suppression: disable
        force_language: c
        force: enable
        max_ctu_depth: 2
        std: c11
        output_file: ./codecheck.txt
        other_options: --bug-hunting --verbose --std=c11

    - name: report
      uses: Qful/check-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.SOC_XIN_TOCKEN }}
        BRANCH_NAME: 'master'

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: code_check_report
        path: codecheck.txt

  build:
    strategy:
      fail-fast: false
      matrix:
        items:
          - "JTAG"
          - "jump_to_bl"
          - "si5351"
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Install sdcc
        run: |
          wget https://sourceforge.net/projects/sdcc/files/sdcc-linux-amd64/4.0.0/sdcc-4.0.0-amd64-unknown-linux2.5.tar.bz2
          tar -xf sdcc-4.0.0-amd64-unknown-linux2.5.tar.bz2
          echo `pwd`/sdcc-4.0.0/bin >> $GITHUB_PATH

      - name: Build project
        if: success()
        working-directory: project
        run: |
          make -C ${{ matrix.items }}

      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: build_project
          path: project/${{ matrix.items }}

